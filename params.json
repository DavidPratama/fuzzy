{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# fuzzy\r\n\r\n1k standalone fuzzy search / fuzzy filter a la Textmate and Sublime Text's command-T fuzzy file search. Node or browser.\r\n\r\n## Get It\r\n\r\nNode:\r\n\r\n```bash\r\n$ npm install fuzzy\r\n$ node\r\n> var fuzzy = require('fuzzy');\r\n> console.log(fuzzy)\r\n{ test: [Function],\r\n  match: [Function],\r\n  filter: [Function] }\r\n```\r\n\r\nBrowser:\r\n\r\n```html\r\n<script src=\"/path/to/fuzzy.js\"></script>\r\n<script>\r\n  console.log(fuzzy);\r\n  // Object >\r\n  //   filter: function (pattern, arr, opts) {\r\n  //   match: function (pattern, string, opts) {\r\n  //   test: function (pattern, string) {\r\n</script>\r\n```\r\n\r\n## Use It\r\n\r\nPadawan: Simply filter an array of strings.\r\n\r\n```javascript\r\nvar list = ['baconing', 'narwhal', 'a mighty bear canoe'];\r\nvar results = fuzzy.filter('bcn', list)\r\nvar matches = results.map(function(el) { return el.string; });\r\nconsole.log(matches);\r\n// [ 'baconing', 'a mighty bear canoe' ]\r\n```\r\n\r\nJedi: Wrap matching characters in each string\r\n\r\n```javascript\r\nvar list = ['baconing', 'narwhal', 'a mighty bear canoe'];\r\nvar options = { pre: '<', post: '>' };\r\nvar results = fuzzy.filter('bcn', list, options)\r\nconsole.log(results);\r\n// [\r\n//   {string: '<b>a<c>o<n>ing'           , index: 0, score: 3, original: 'baconing'},\r\n//   {string: 'a mighty <b>ear <c>a<n>oe', index: 2, score: 3, original: 'a mighty bear canoe'}\r\n// ]\r\n```\r\n\r\nJedi Master: sometimes the array you give is not an array of strings. You can\r\npass in a function that creates the string to match against from each element\r\nin the given array\r\n\r\n```javascript\r\nvar list = [\r\n    {rompalu: 'baconing', zibbity: 'simba'}\r\n  , {rompalu: 'narwhal' , zibbity: 'mufasa'}\r\n  , {rompalu: 'a mighty bear canoe', zibbity: 'saddam hussein'}\r\n];\r\nvar options = {\r\n    pre: '<'\r\n  , post: '>'\r\n  , extract: function(el) { return el.rompalu; }\r\n};\r\nvar results = fuzzy.filter('bcn', list, options);\r\nvar matches = results.map(function(el) { return el.string; });\r\nconsole.log(matches);\r\n// [ '<b>a<c>o<n>ing', 'a mighty <b>ear <c>a<n>oe' ]\r\n```\r\n\r\n## Examples\r\nCheck out the html files in the examples directory\r\n\r\n## Documentation\r\nCode is well documented and the unit tests cover all functionality\r\n\r\n## Contributing\r\nFork the repo!\r\n\r\n    git clone <your_fork>\r\n    cd fuzzy\r\n    npm install -d\r\n    make\r\n\r\nAdd unit tests for any new or changed functionality. Lint, test, and minify using make, then shoot me a pull request.\r\n\r\n## Release History\r\nv0.1.0 - July 25, 2012\r\n\r\n## License\r\nCopyright (c) 2012 Matt York\r\nLicensed under the MIT license.\r\n","name":"Fuzzy","tagline":"Filters a list based on a fuzzy string search"}